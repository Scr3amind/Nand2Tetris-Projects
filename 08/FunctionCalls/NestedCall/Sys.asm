// function Sys.init
(Sys.init)
// push constant 4000	 
@4000	
D=A
@SP
A=M
M=D
@SP
M=M+1
// pop pointer 0 
@SP
M=M-1
@THIS
D=A
@address
M=D
@SP
A=M
D=M
@address
A=M
M=D
// push constant 5000 
@5000
D=A
@SP
A=M
M=D
@SP
M=M+1
// pop pointer 1 
@SP
M=M-1
@THAT
D=A
@address
M=D
@SP
A=M
D=M
@address
A=M
M=D
// Calling Sys.main with 0 args
// pushing Sys.init$return-address0 segment
@Sys.init$return-address0
D=M
@SP
A=M
M=D
@SP
M=M+1
// pushing LCL segment
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
// pushing ARG segment
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
// pushing THIS segment
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
// pushing THAT segment
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@SP
D=M-D
@ARG
D=A
@SP
D=M
@LCL
M=D
// goto Sys.main 
@Sys.main
0;JMP
// label return-address0 
(Sys.init$return-address0)
// pop temp 1 
@SP
M=M-1
@1
D=A
@5
D=D+A
@address
M=D
@SP
A=M
D=M
@address
A=M
M=D
// label LOOP 
(Sys.init$LOOP)
// goto LOOP 
@LOOP
0;JMP
// function Sys.main
(Sys.main)
// push constant 0 
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 0 
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 0 
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 0 
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 0 
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 4001 
@4001
D=A
@SP
A=M
M=D
@SP
M=M+1
// pop pointer 0 
@SP
M=M-1
@THIS
D=A
@address
M=D
@SP
A=M
D=M
@address
A=M
M=D
// push constant 5001 
@5001
D=A
@SP
A=M
M=D
@SP
M=M+1
// pop pointer 1 
@SP
M=M-1
@THAT
D=A
@address
M=D
@SP
A=M
D=M
@address
A=M
M=D
// push constant 200 
@200
D=A
@SP
A=M
M=D
@SP
M=M+1
// pop local 1 
@SP
M=M-1
@1
D=A
@LCL
D=D+M
@address
M=D
@SP
A=M
D=M
@address
A=M
M=D
// push constant 40 
@40
D=A
@SP
A=M
M=D
@SP
M=M+1
// pop local 2 
@SP
M=M-1
@2
D=A
@LCL
D=D+M
@address
M=D
@SP
A=M
D=M
@address
A=M
M=D
// push constant 6 
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
// pop local 3 
@SP
M=M-1
@3
D=A
@LCL
D=D+M
@address
M=D
@SP
A=M
D=M
@address
A=M
M=D
// push constant 123 
@123
D=A
@SP
A=M
M=D
@SP
M=M+1
// Calling Sys.add12 with 1 args
// pushing Sys.main$return-address1 segment
@Sys.main$return-address1
D=M
@SP
A=M
M=D
@SP
M=M+1
// pushing LCL segment
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
// pushing ARG segment
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
// pushing THIS segment
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
// pushing THAT segment
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
D=A
@SP
D=M
@LCL
M=D
// goto Sys.add12 
@Sys.add12
0;JMP
// label return-address1 
(Sys.main$return-address1)
// pop temp 0 
@SP
M=M-1
@0
D=A
@5
D=D+A
@address
M=D
@SP
A=M
D=M
@address
A=M
M=D
// push local 0 
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push local 1 
@1
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push local 2 
@2
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push local 3 
@3
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push local 4 
@4
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
// add 
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
M=M+D
(UPDATESP0)
@SP
M=M+1
// add 
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
M=M+D
(UPDATESP1)
@SP
M=M+1
// add 
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
M=M+D
(UPDATESP2)
@SP
M=M+1
// add 
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
M=M+D
(UPDATESP3)
@SP
M=M+1
// Return
@LCL
D=M
@FRAME
M=D
@5
D=A
@FRAME
D=M-D
A=D
D=M
@RET
M=D
// pop argument 0 
@SP
M=M-1
@0
D=A
@ARG
D=D+M
@address
M=D
@SP
A=M
D=M
@address
A=M
M=D
@ARG
D=M+1
@SP
M=D
@1
D=A
@FRAME
D=M-D
A=D
D=M
@THAT
M=D
@2
D=A
@FRAME
D=M-D
A=D
D=M
@THIS
M=D
@3
D=A
@FRAME
D=M-D
A=D
D=M
@ARG
M=D
@4
D=A
@FRAME
D=M-D
A=D
D=M
@LCL
M=D
@RET
A=M
0;JMP
// function Sys.add12
(Sys.add12)
// push constant 4002 
@4002
D=A
@SP
A=M
M=D
@SP
M=M+1
// pop pointer 0 
@SP
M=M-1
@THIS
D=A
@address
M=D
@SP
A=M
D=M
@address
A=M
M=D
// push constant 5002 
@5002
D=A
@SP
A=M
M=D
@SP
M=M+1
// pop pointer 1 
@SP
M=M-1
@THAT
D=A
@address
M=D
@SP
A=M
D=M
@address
A=M
M=D
// push argument 0 
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 12 
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
// add 
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
M=M+D
(UPDATESP4)
@SP
M=M+1
// Return
@LCL
D=M
@FRAME
M=D
@5
D=A
@FRAME
D=M-D
A=D
D=M
@RET
M=D
// pop argument 0 
@SP
M=M-1
@0
D=A
@ARG
D=D+M
@address
M=D
@SP
A=M
D=M
@address
A=M
M=D
@ARG
D=M+1
@SP
M=D
@1
D=A
@FRAME
D=M-D
A=D
D=M
@THAT
M=D
@2
D=A
@FRAME
D=M-D
A=D
D=M
@THIS
M=D
@3
D=A
@FRAME
D=M-D
A=D
D=M
@ARG
M=D
@4
D=A
@FRAME
D=M-D
A=D
D=M
@LCL
M=D
@RET
A=M
0;JMP
